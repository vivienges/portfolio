{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _fastEquals = require(\"fast-equals\");\n\nvar _utils = require(\"./utils\");\n\nvar _responsiveUtils = require(\"./responsiveUtils\");\n\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n/*:: import { type Layout, type Pick } from \"./utils\";*/\n\n/*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\n\n\nconst type = obj => Object.prototype.toString.call(obj);\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\n\n\nfunction getIndentationValue\n/*:: <T: ?[number, number]>*/\n(param\n/*: { [key: string]: T } | T*/\n, breakpoint\n/*: string*/\n)\n/*: T*/\n{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null; // $FlowIgnore TODO fix this typedef\n\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\n\n\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", this.generateInitialState()); // wrap layouts so we do not need to pass layouts to child\n\n\n    _defineProperty(this, \"onLayoutChange\", (layout\n    /*: Layout*/\n    ) => {\n      this.props.onLayoutChange(layout, { ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n\n  generateInitialState()\n  /*: State*/\n  {\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols); // verticalCompact compatibility, now deprecated\n\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType; // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps\n  /*: Props<*>*/\n  , prevState\n  /*: State*/\n  )\n  /*: ?$Shape<State>*/\n  {\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState; // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps\n  /*: Props<*>*/\n  ) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n\n\n  onWidthChange(prevProps\n  /*: Props<*>*/\n  ) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols\n    /*: number*/\n    = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = { ...layouts\n    }; // Breakpoint change\n\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout); // Find or generate a new layout.\n\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType); // This adds missing items.\n\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap); // Store the new layout.\n\n      newLayouts[newBreakpoint] = layout; // callbacks\n\n      this.props.onLayoutChange(layout, newLayouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint); //call onWidthChange on every change of width, not only on breakpoint changes\n\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n\n  render()\n  /*: React.Element<typeof ReactGridLayout>*/\n  {\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n\n}\n\nexports.default = ResponsiveReactGridLayout; // This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props\n  /*: Props<>*/\n  , propName\n  /*: string*/\n  ) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});","map":{"version":3,"sources":["/Users/viviengeschwind/Projects/Website/website-professional/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js"],"names":["Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_fastEquals","_utils","_responsiveUtils","_ReactGridLayout","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","type","toString","getIndentationValue","param","breakpoint","Array","isArray","ResponsiveReactGridLayout","Component","constructor","generateInitialState","layout","props","onLayoutChange","layouts","state","width","breakpoints","cols","getBreakpointFromWidth","colNo","getColsFromBreakpoint","compactType","verticalCompact","initialLayout","findOrGenerateResponsiveLayout","getDerivedStateFromProps","nextProps","prevState","deepEqual","newLayout","componentDidUpdate","prevProps","onWidthChange","newBreakpoint","lastBreakpoint","newCols","newLayouts","cloneLayout","synchronizeLayoutWithChildren","children","allowOverlap","onBreakpointChange","setState","margin","containerPadding","render","other","createElement","string","object","bool","oneOfType","array","propName","Error","keys","forEach","validateLayout","number","isRequired","func","lg","md","sm","xs","xxs","noop"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onLayoutChange(layout, newLayouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});"]},"metadata":{},"sourceType":"script"}