{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\n\nexport function useListItem(parameters) {\n  var _parameters$handlePoi = parameters.handlePointerOverEvents,\n      handlePointerOverEvents = _parameters$handlePoi === void 0 ? false : _parameters$handlePoi,\n      item = parameters.item,\n      externalRef = parameters.rootRef;\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, externalRef);\n  var listContext = React.useContext(ListContext);\n\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n\n  var dispatch = listContext.dispatch,\n      getItemState = listContext.getItemState,\n      registerHighlightChangeHandler = listContext.registerHighlightChangeHandler,\n      registerSelectionChangeHandler = listContext.registerSelectionChangeHandler;\n\n  var _getItemState = getItemState(item),\n      highlighted = _getItemState.highlighted,\n      selected = _getItemState.selected,\n      focusable = _getItemState.focusable;\n\n  var rerender = useForcedRerendering();\n  useEnhancedEffect(function () {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(function () {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  var createHandleClick = React.useCallback(function (externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onC;\n\n      (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: ListActionTypes.itemClick,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var createHandlePointerOver = React.useCallback(function (externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onM;\n\n      (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      dispatch({\n        type: ListActionTypes.itemHover,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var tabIndex;\n\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n\n  var getRootProps = function getRootProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex: tabIndex\n    });\n  };\n\n  return {\n    getRootProps: getRootProps,\n    highlighted: highlighted,\n    rootRef: handleRef,\n    selected: selected\n  };\n}","map":{"version":3,"sources":["/Users/viviengeschwind/Projects/Website/website-professional/node_modules/@mui/base/useList/useListItem.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","externalRef","rootRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","externalHandlers","event","_externalHandlers$onC","onClick","call","defaultPrevented","type","itemClick","createHandlePointerOver","_externalHandlers$onM","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","externalEventHandlers","onPointerOver","undefined","ref"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}"]},"metadata":{},"sourceType":"module"}